(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{369:function(e,t,a){"use strict";a.r(t);var s=a(14),n=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"mime-db"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mime-db"}},[e._v("#")]),e._v(" mime-db")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://npmjs.org/package/mime-db",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://badgen.net/npm/v/mime-db",alt:"NPM Version"}}),t("OutboundLink")],1),e._v(" "),t("a",{attrs:{href:"https://npmjs.org/package/mime-db",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://badgen.net/npm/dm/mime-db",alt:"NPM Downloads"}}),t("OutboundLink")],1),e._v(" "),t("a",{attrs:{href:"https://nodejs.org/en/download",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://badgen.net/npm/node/mime-db",alt:"Node.js Version"}}),t("OutboundLink")],1),e._v(" "),t("a",{attrs:{href:"https://github.com/jshttp/mime-db/actions?query=workflow%3Aci",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://badgen.net/github/checks/jshttp/mime-db/master?label=ci",alt:"Build Status"}}),t("OutboundLink")],1),e._v(" "),t("a",{attrs:{href:"https://coveralls.io/r/jshttp/mime-db?branch=master",target:"_blank",rel:"noopener noreferrer"}},[t("img",{attrs:{src:"https://badgen.net/coveralls/c/github/jshttp/mime-db/master",alt:"Coverage Status"}}),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("This is a large database of mime types and information about them.\nIt consists of a single, public JSON file and does not include any logic,\nallowing it to remain as un-opinionated as possible with an API.\nIt aggregates data from the following sources:")]),e._v(" "),t("ul",[t("li",[e._v("http://www.iana.org/assignments/media-types/media-types.xhtml")]),e._v(" "),t("li",[e._v("http://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types")]),e._v(" "),t("li",[e._v("http://hg.nginx.org/nginx/raw-file/default/conf/mime.types")])]),e._v(" "),t("h2",{attrs:{id:"installation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[e._v("#")]),e._v(" Installation")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" mime-db\n")])])]),t("h3",{attrs:{id:"database-download"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#database-download"}},[e._v("#")]),e._v(" Database Download")]),e._v(" "),t("p",[e._v("If you're crazy enough to use this in the browser, you can just grab the\nJSON file using "),t("a",{attrs:{href:"https://www.jsdelivr.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("jsDelivr"),t("OutboundLink")],1),e._v(". It is recommended to\nreplace "),t("code",[e._v("master")]),e._v(" with "),t("a",{attrs:{href:"https://github.com/jshttp/mime-db/tags",target:"_blank",rel:"noopener noreferrer"}},[e._v("a release tag"),t("OutboundLink")],1),e._v("\nas the JSON format may change in the future.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("https://cdn.jsdelivr.net/gh/jshttp/mime-db@master/db.json\n")])])]),t("h2",{attrs:{id:"usage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[e._v("#")]),e._v(" Usage")]),e._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" db "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'mime-db'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// grab data on .js files")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" data "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" db"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'application/javascript'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n")])])]),t("h2",{attrs:{id:"data-structure"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#data-structure"}},[e._v("#")]),e._v(" Data Structure")]),e._v(" "),t("p",[e._v("The JSON file is a map lookup for lowercased mime types.\nEach mime type has the following properties:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v(".source")]),e._v(" - where the mime type is defined.\nIf not set, it's probably a custom media type.\n"),t("ul",[t("li",[t("code",[e._v("apache")]),e._v(" - "),t("a",{attrs:{href:"http://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types",target:"_blank",rel:"noopener noreferrer"}},[e._v("Apache common media types"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("code",[e._v("iana")]),e._v(" - "),t("a",{attrs:{href:"http://www.iana.org/assignments/media-types/media-types.xhtml",target:"_blank",rel:"noopener noreferrer"}},[e._v("IANA-defined media types"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("code",[e._v("nginx")]),e._v(" - "),t("a",{attrs:{href:"http://hg.nginx.org/nginx/raw-file/default/conf/mime.types",target:"_blank",rel:"noopener noreferrer"}},[e._v("nginx media types"),t("OutboundLink")],1)])])]),e._v(" "),t("li",[t("code",[e._v(".extensions[]")]),e._v(" - known extensions associated with this mime type.")]),e._v(" "),t("li",[t("code",[e._v(".compressible")]),e._v(" - whether a file of this type can be gzipped.")]),e._v(" "),t("li",[t("code",[e._v(".charset")]),e._v(" - the default charset associated with this type, if any.")])]),e._v(" "),t("p",[e._v("If unknown, every property could be "),t("code",[e._v("undefined")]),e._v(".")]),e._v(" "),t("h2",{attrs:{id:"contributing"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#contributing"}},[e._v("#")]),e._v(" Contributing")]),e._v(" "),t("p",[e._v("To edit the database, only make PRs against "),t("code",[e._v("src/custom-types.json")]),e._v(" or\n"),t("code",[e._v("src/custom-suffix.json")]),e._v(".")]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("src/custom-types.json")]),e._v(" file is a JSON object with the MIME type as the\nkeys and the values being an object with the following keys:")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("compressible")]),e._v(" - leave out if you don't know, otherwise "),t("code",[e._v("true")]),e._v("/"),t("code",[e._v("false")]),e._v(" to\nindicate whether the data represented by the type is typically compressible.")]),e._v(" "),t("li",[t("code",[e._v("extensions")]),e._v(" - include an array of file extensions that are associated with\nthe type.")]),e._v(" "),t("li",[t("code",[e._v("notes")]),e._v(" - human-readable notes about the type, typically what the type is.")]),e._v(" "),t("li",[t("code",[e._v("sources")]),e._v(" - include an array of URLs of where the MIME type and the associated\nextensions are sourced from. This needs to be a "),t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Primary_source",target:"_blank",rel:"noopener noreferrer"}},[e._v("primary source"),t("OutboundLink")],1),e._v(";\nlinks to type aggregating sites and Wikipedia are "),t("em",[e._v("not acceptable")]),e._v(".")])]),e._v(" "),t("p",[e._v("To update the build, run "),t("code",[e._v("npm run build")]),e._v(".")]),e._v(" "),t("h3",{attrs:{id:"adding-custom-media-types"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#adding-custom-media-types"}},[e._v("#")]),e._v(" Adding Custom Media Types")]),e._v(" "),t("p",[e._v("The best way to get new media types included in this library is to register\nthem with the IANA. The community registration procedure is outlined in\n"),t("a",{attrs:{href:"http://tools.ietf.org/html/rfc6838#section-5",target:"_blank",rel:"noopener noreferrer"}},[e._v("RFC 6838 section 5"),t("OutboundLink")],1),e._v(". Types\nregistered with the IANA are automatically pulled into this library.")]),e._v(" "),t("p",[e._v('If that is not possible / feasible, they can be added directly here as a\n"custom" type. To do this, it is required to have a primary source that\ndefinitively lists the media type. If an extension is going to be listed as\nassociateed with this media type, the source must definitively link the\nmedia type and extension as well.')])])}),[],!1,null,null,null);t.default=n.exports}}]);